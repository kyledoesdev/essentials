<?php

namespace App\Filament\Resources;

use App\Filament\Resources\UserResource\Pages;
use App\Models\User;
use Carbon\Carbon;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Infolists\Components\Group;
use Filament\Infolists\Components\ImageEntry;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;

class UserResource extends Resource
{
    protected static ?string $model = User::class;

    protected static ?string $navigationIcon = 'heroicon-o-users';

    protected static ?string $navigationGroup = 'System';

    protected static ?int $navigationSort = 1;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make('User Information')
                    ->schema([
                        Forms\Components\TextInput::make('name')
                            ->required()
                            ->maxLength(255),
                        Forms\Components\TextInput::make('email')
                            ->email()
                            ->required()
                            ->unique(ignoreRecord: true)
                            ->maxLength(255),
                        Forms\Components\Select::make('timezone')
                            ->required()
                            ->searchable()
                            ->options(fn () => collect(timezone_identifiers_list())
                                ->mapWithKeys(fn ($tz) => [$tz => $tz])
                                ->toArray())
                            ->default('UTC'),
                        Forms\Components\FileUpload::make('avatar')
                            ->image()
                            ->imageEditor()
                            ->circleCropper()
                            ->directory('avatars')
                            ->maxSize(5120)
                            ->nullable(),
                    ])
                    ->columns(2),
                
                Forms\Components\Section::make('Security & Access')
                    ->schema([
                        Forms\Components\TextInput::make('password')
                            ->password()
                            ->revealable()
                            ->required(fn (string $operation): bool => $operation === 'create')
                            ->dehydrated(fn (?string $state): bool => filled($state))
                            ->maxLength(255),
                        Forms\Components\Toggle::make('is_dev')
                            ->label('Developer Access')
                            ->helperText('Grants access to admin panel')
                            ->default(false),
                    ])
                    ->columns(2),
                
                Forms\Components\Section::make('System Information')
                    ->schema([
                        Forms\Components\TextInput::make('ip_address')
                            ->maxLength(20)
                            ->disabled(),
                        Forms\Components\TextInput::make('user_agent')
                            ->maxLength(50)
                            ->disabled(),
                        Forms\Components\TextInput::make('user_platform')
                            ->maxLength(50)
                            ->disabled(),
                    ])
                    ->columns(3)
                    ->collapsible()
                    ->collapsed()
                    ->visibleOn(['edit', 'view']),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('id')
                    ->label('ID')
                    ->searchable()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\ImageColumn::make('avatar')
                    ->circular()
                    ->toggleable(),
                Tables\Columns\TextColumn::make('name')
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make('email')
                    ->searchable()
                    ->sortable()
                    ->copyable()
                    ->copyMessage('Email copied'),
                Tables\Columns\TextColumn::make('timezone')
                    ->sortable()
                    ->searchable()
                    ->toggleable(),
                Tables\Columns\TextColumn::make('ip_address')
                    ->label('IP Address')
                    ->sortable()
                    ->searchable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\TextColumn::make('created_at')
                    ->label('Joined')
                    ->dateTime('M j, Y')
                    ->description(fn ($record) => $record->created_at->diffForHumans())
                    ->sortable()
                    ->toggleable(),
                Tables\Columns\TextColumn::make('updated_at')
                    ->label('Last Active')
                    ->dateTime('M j, Y g:i A')
                    ->description(fn ($record) => $record->updated_at->diffForHumans())
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('created_at', 'desc')
            ->poll('60s');
    }

    public static function infolist(Infolist $infolist): Infolist
    {
        return $infolist
            ->schema([
                Section::make('User Information')
                    ->columns(3)
                    ->schema([
                        Group::make()
                            ->columnSpan(1)
                            ->schema([
                                ImageEntry::make('avatar')
                                    ->circular()
                                    ->size(150),
                            ]),
                        Group::make()
                            ->columnSpan(2)
                            ->columns(2)
                            ->schema([
                                TextEntry::make('id')
                                    ->label('ID'),
                                TextEntry::make('name'),
                                TextEntry::make('email')
                                    ->copyable()
                                    ->copyMessage('Email copied'),
                                TextEntry::make('timezone'),
                                TextEntry::make('ip_address')
                                    ->label('IP Address')
                                    ->placeholder('Not recorded'),
                                TextEntry::make('user_agent')
                                    ->label('User Agent')
                                    ->placeholder('Not recorded')
                                    ->columnSpanFull()
                                    ->limit(50),
                                TextEntry::make('user_platform')
                                    ->label('Platform')
                                    ->placeholder('Not recorded'),
                            ]),
                    ]),
                
                Section::make('Timestamps')
                    ->columns(2)
                    ->collapsible()
                    ->schema([
                        TextEntry::make('created_at')
                            ->label('First Joined')
                            ->dateTime('F j, Y g:i A T')
                            ->helperText(fn ($record) => $record->created_at->diffForHumans()),
                        TextEntry::make('updated_at')
                            ->label('Last Active')
                            ->dateTime('F j, Y g:i A T')
                            ->helperText(fn ($record) => $record->updated_at->diffForHumans()),
                        TextEntry::make('email_verified_at')
                            ->label('Email Verified')
                            ->dateTime('F j, Y g:i A T')
                            ->placeholder('Not verified')
                            ->helperText(fn ($record) => $record->email_verified_at?->diffForHumans()),
                    ]),
            ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListUsers::route('/'),
            'create' => Pages\CreateUser::route('/create'),
            'view' => Pages\ViewUser::route('/{record}'),
            'edit' => Pages\EditUser::route('/{record}/edit'),
        ];
    }

    public static function getNavigationBadge(): ?string
    {
        return static::getModel()::count();
    }
}